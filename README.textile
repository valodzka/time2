h2. Small step forward

h3. Minimalistic time zone support for Ruby time class

Ruby Time class is the one of the most disappointment parts of the ruby standard library.
* It "can't handle time zones":http://michaelbuffington.com/2006/10/11/i-heap-scorn-upon-rubys-time-class/ by design (although some methods accept time zone as a parameter) and this can't be changed by "third party libraries":http://tzinfo.rubyforge.org (except via creating a new class (as "Rails does":http://api.rubyonrails.org/classes/ActiveSupport/TimeWithZone.html)).
* It has pure ruby implementation of time parsing method, which is "awfully slow":http://scie.nti.st/2007/11/28/ruby-vs-python-date-parsing-am-i-doing-somethin-wrong.

The initial idea of this project was to reimplement ruby Time class with first class time zones support. But, after a couple of discussion, I realized that, dispite there are some cases when it usefull, storing timezone with time generaly brings more drawbacks than advantages. So currently library just fixes couple of ruby <code>Time</code> methods by adding fast cross platform implementation (<code>Time.local</code>, <code>Time.utc</code>, <code>Time.strptime</code>, generaly 10-100 times faster then alternatives).

h4. FAQ

h5. How can I use system "tz database":http://www.twinsun.com/tz/tz-link.htm ?

At the moment library uses global variable <code>$__tz_directory</code> as a tz database location directory. It's configured automaticaly to use bundled tz database in time of library loading.

Many OS (but "not all":http://microsoft.com) contain own tz database, so if you want to use system (or any other) tz database, you should set <code>$__tz_directory</code> before <code>require 'time2'</code> statement.


h3. Portability

Code tested on Debian Lenny with GCC 4.3.3, Mac OS X with GCC 4.0.1 and Windows with VC 9

h3. Acknowledgements

* "tz database":http://www.twinsun.com/tz/tz-link.htm for the excellent "time zones database and initial version of time functions (version tzcode2009b)":ftp://elsie.nci.nih.gov/pub
* "postgresql":postgresql.org for initial multitimezone "code modification (version as of 18.03.2009, revision 3d9af4c1128c6cf3c5bcaa8db1910e7295f91000)":http://git.postgresql.org/?p=postgresql.git;a=tree;f=src/timezone
* "free BSD project":http://www.freebsd.org for "initial strptime implementation (vesion as of 18.03.2009, revisition  1.35)":http://www.freebsd.org.ua/cgi/cvsweb.cgi/src/lib/libc/stdtime/strptime.c?content-type=text/x-cvsweb-markup&cvsroot=freebsd

h3. License

Same terms as Ruby unless otherwise specified in the file.



